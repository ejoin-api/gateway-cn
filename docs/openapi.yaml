openapi: 3.0.1
info:
  title: Ejoin Gateway HTTP API
  description: >
    欢迎使用 Ejoin Gateway HTTP API 文档
    
    
    此处提供有关学习、测试和实施 Ejoin Gateway HTTP API 的详细指南


    # 概述

     本文档阐述了基于 HTTP 协议的设备短信 API，涵盖短信接收、单条/群组消息发送以及发送任务状态查询功能


     本版本在现有"Ejoin 短信发送 API"基础上，增强了对群组消息、多任务处理和状态报告的支持——所有操作均可通过单次请求完成


     该 API 仍采用 HTTP 协议，但现支持 POST 请求方式，可使用 JSON 数组格式处理多任务及状态更新
     
     
     <span style="text-decoration: underline;font-weight: bold;font-style: italic;color: red">要使用 3.0.0版本的 API，请将设备升级至 8.0d 或更高版本</span>

     # 快速开始

     要与设备进行通信，需要指定两个关键参数:

     **Host**: 目标设备的 IP 地址。通常为设备在本地网络中被分配的地址，若需远程访问，则需使用静态 IP 地址

     **Port**: 设备基于网页的管理接口所使用的端口。默认设置为 80（标准 HTTP 端口）。若设备端口已自定义配置，请确保使用更新后的端口号

     调用 API 时，需通过这些参数构建完整的请求 URL

     # Postman 下载URL
     
     https://www.postman.com/downloads/


  version: 3.1.0
  x-logo:
    url: ./EAPI-logo.png
    backgroundColor: '#FAFAFA'
    altText: SMS logo
tags:
  - name: 短信彩信
    description: |-
      <span style="text-decoration: underline;font-weight: bold;font-style: italic"><a download target="_blank" href="./Message Operations.postman_collection.json">💡一键导入：短信彩信Postman配置集合</a> </span>
  - name: 设备操作
    description: |-
       <span style="text-decoration: underline;font-weight: bold;font-style: italic"><a download target="_blank" href="./Device Action Commands.postman_collection.json">💡一键导入：设备操作Postman配置集合</a> </span>
  - name: 状态通知
  - name: 统计信息
  - name: AT命令
  - name: USSD
  - name: ESIM
  - name: 锁定基站
    description: |-
      <span style="text-decoration: underline;font-weight: bold;font-style: italic"><a download target="_blank" href="./CellLock.postman_collection.json">💡一键导入：锁定基站Postman配置集合</a> </span>
  - name: 号码设置
    description: |-
      <span style="text-decoration: underline;font-weight: bold;font-style: italic"><a download target="_blank" href="./NumberConfig.postman_collection.json">💡一键导入：号码设置Postman配置集合</a></span>
    
paths:
  http://host:port/submit_sms_tasks:
    post:
      summary: 提交发送任务
      deprecated: false
      description: >-
        注意事项：

         1.若未选择端口，设备将为每位短信接收方随机分配端口号。
         
         
         2.若选择多个端口但仅指定单一接收方，所有选定端口将共同向该接收方发送短信。
         
         
         3.若同时选择多个端口并指定多个接收方，每个端口将独立向所有接收方发送短信。
      tags:
        - 短信彩信  
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: 
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    description: 任务ID
                  from:
                    type: string
                    description: ⼀个或多个（逗号，短横线连接）发送端⼝（从 1 开始）
                    default: 设备自动选择
                  recipients: 
                    type: array
                    description: ⽬标号码字符串数组
                    items: 
                      type: string
                  smsc:
                    type: string
                    description: 短消息服务中心号码
                  interval_min:
                    type: number
                    description: >-
                      任务内短信发送最小间隔，**单位为毫秒**
                  interval_max:
                    type: number
                    description: 任务内短信发送最大间隔，**单位为毫秒**
                  timeout: 
                    type: number
                    default: 30
                    description: >-
                      等待短信发送结果的超时时间, **单位为秒**
                  charset:
                    type: string
                    default: UTF-8
                    enum: 
                      - Base64
                      - UTF-8
                      - PDU
                    description: SMS字段的编码
                  sms:
                    type: string
                    description: 短信内容
                  coding:
                    type: integer
                    description: >-
                     短信发送时的编码：
                      <ul><li> 0 不指定</li>
                      <li>1 使用USC2编码发送</li>
                      <li>2 使用7bit编码发送</li></ul>
                    enum: 
                      - 0
                      - 1
                      - 2
                    default: 0
                  sms_type:
                    type: number
                    description: >-
                      短信类型
                       <ul><li> 0 普通短信</li>
                       <li>1 彩信</li>
                       <li>2 多彩信号码主题</li><ul>
                    enum: 
                      - 0 
                      - 1 
                      - 2 
                    default: 0
                  subject:
                   type: string
                   description: 彩信主题，使用UTF-8文本，**仅当sms_type为1时使用**
                   nullable: true
                  subjects: 
                    type: array
                    description: 彩信主题数组, **仅当sms_type为2时使用**
                    items:
                      type: object
                      required: 
                        - recipient
                        - subject
                      properties:
                        recipient:
                          type: string
                          description: 接收号码
                        subject: 
                          type: string
                          description: 彩信主题
                  attachments: 
                    type: array
                    description: >-  
                    
                      彩信附件，**仅当sms_type为1或2时用于指定附件**
                    
                    
                      <span style="font-weight: bold;color: red">最多有5个附件，且总⻓度不能超过100KB </span>
                    items:
                      type: object
                      required: 
                        - type
                        - content
                      properties:
                        type: 
                          type: string
                          description: 附件类型
                          enum:
                            - txt
                            - jpg
                            - gif
                            - map3
                        content:
                          type: string
                          description: BASE64编码的附件内容
                  sdr:
                    type: bool
                    description: 是否开启短信成功状态报告
                    default: false
                  fdr:
                    type: bool
                    default: false
                    description: 是否开启短信失败详情记录
                  dr: 
                    type: bool
                    default: false
                    description: 是否开启短信送达报告
                  flash_sms: 
                    type: bool
                    default: false
                    description: 是否是闪信
                  sms_count:
                    type: number
                    default: 100
                    description: 本任务状态报告短信数，小于0时使用默认值
                  sms_period:
                    type: number
                    default: 60
                    description: 本任务状态报告周期，单位为秒，为0时不开启状态报告，大于0时开启状态报告
                  to_all:
                    type: bool
                    default: false
                    description: 是否使用所有端口
                  bcc:
                    type: string
                    description: 匿名抄送
                  cc:
                    type: string
                    description: 抄送
                required: 
                  - id
                  - recipients
                  - sms
              example:
                - id: 1
                  from: 1
                  sms: hello
                  interval_min: 30000
                  interval_max: 50000
                  timeout: 30
                  charset: UTF-8
                  coding: 0
                  sms_type: 1
                  sdr: true
                  fdr: true
                  dr: true
                  to_all: false
              
                  recipients:
                    - 18122520012
                  attachments: 
                    - type: jpg
                      content: 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
                  
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  required:
                    - id
                    - code
                    - reason
                  properties:
                    id: 
                      type: number
                      description: 任务ID
                    code: 
                      type: integer
                      minimum: 0
                      maximim: 20
                      description: 状态码
                    reason:
                      type: string
                      description: >-
                        状态码描述


                         如果任务状态不等于“OK”，则表示设备未收到该任务
                            
                         <ul><li>OK</li>
                         <li>Invalid User</li>
                         <li>Invalid Port</li>
                         <li>"USSD" Expected</li>
                         <li>Pending USSD</li>
                         <li>SIM Unregistered</li>
                         <li>Timeout</li>
                         <li>Server Error</li>
                         <li>"SMS" Expected</li>
                         <li>"TO" Expected</li>
                         <li>Pending Transaction</li>
                         <li>"TID" Expected</li>
                         <li>"FROM" Expected</li>
                         <li>Duplicated TaskID</li>
                         <li>Unauthorized</li>
                         <li>Invalid CMD</li>
                         <li>Too Many Task</li>
                         <li>"MMS" Title Expected</li>
                         <li>Too Many "MMS" Attachments</li>
                         <li>"MMS" Attachments Expected</li>
                         <li>"MMS" Attachments Cache Size Overlimit</li>
                         </ul>            
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - id: 1
                      code: 0
                      reason: OK
                    - id: 1
                      code: 2
                      reason: Port Unavailable
          headers: {}
      security: []

  http://host:port/pause_sms_tasks:
    post:
      summary: 暂停发送任务
      deprecated: false
      description: >

         暂停一个或多个仍在发送队列中且尚未派发的发送任务 
        
      tags:
        - 短信彩信  
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: number
                  description: >
                    任务ID数组
            example: 
                - 1
                - 2
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      examples:
                        - 200
                      description: 任务ID
                    code:
                      type: number
                      minimum: 0
                      maximum: 12
                      description: 任务ID状态码
                      examples:
                        - OK
                    reason:
                      type: array
                      description: >-
                        状态码描述 
                        
                        
                         <ul>
                         <li>OK</li>
                         <li>Invalid User</li>
                         <li>Invalid Port</li>
                         <li>"USSD" Expected</li>
                         <li>Pending USSD</li>
                         <li>SIM Unregistered</li>
                         <li>Timeout</li>
                         <li>Server Error</li>
                         <li>"SMS" Expected</li>
                         <li>"TO" Expected</li>
                         <li>Pending Transaction</li>
                         <li>"TID" Expected</li>
                         <li>"From" Expected</li>
                         </ul>      
                required:
                  - reason
                  - code
                  - id
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - id: 1
                      code: 0
                      reason: OK
                    - id: 2
                      code: 0
                      reason: OK
          headers: {}
      security: []
 
  http://host:port/resume_sms_tasks:
    post:
      summary: 恢复发送任务
      deprecated: false
      description: |-

        继续执行发送队列中一个或多个先前被暂停的发送任务
       
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: number
                  description: >
                    任务ID数组
            example: 
                - 1
                - 2
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      examples:
                        - 200
                      description: 任务ID
                    code:
                      type: number
                      minimum: 0
                      maximum: 12
                      description: 状态码
                      examples:
                        - OK
                    reason:
                      type: array
                      description: >-
                        状态码描述 
                        
                        
                         <ul>
                         <li>OK</li>
                         <li>Invalid User</li>
                         <li>Invalid Port</li>
                         <li>"USSD" Expected</li>
                         <li>Pending USSD</li>
                         <li>SIM Unregistered</li>
                         <li>Timeout</li>
                         <li>Server Error</li>
                         <li>"SMS" Expected</li>
                         <li>"TO" Expected</li>
                         <li>Pending Transaction</li>
                         <li>"TID" Expected</li>
                         <li>"From" Expected</li>
                         </ul>      
                required:
                  - reason
                  - code
                  - id
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - id: 1
                      code: 0
                      reason: OK
                    - id: 2
                      code: 0
                      reason: OK
          headers: {}
      security: []
  http://host:port/remove_sms_tasks:
    post:
      summary: 删除发送任务
      deprecated: false
      description: |-

        删除一个或多个仍在发送队列中等待的发送任务
       
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: 
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: number
                  description: >
                    任务ID数组
            example: 
                - 1
                - 2
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      examples:
                        - 200
                      description: 任务ID
                    code:
                      type: number
                      minimum: 0
                      maximum: 12
                      description: 状态码
                      examples:
                        - OK
                    reason:
                      type: array
                      description: >-
                        状态码描述 
                        
                        

                         <ul>
                         <li>OK</li>
                         <li>Invalid User</li>
                         <li>Invalid Port</li>
                         <li>"USSD" Expected</li>
                         <li>Pending USSD</li>
                         <li>SIM Unregistered</li>
                         <li>Timeout</li>
                         <li>Server Error</li>
                         <li>"SMS" Expected</li>
                         <li>"TO" Expected</li>
                         <li>Pending Transaction</li>
                         <li>"TID" Expected</li>
                         <li>"From" Expected</li>
                         </ul>      
                required:
                  - reason
                  - code
                  - id
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - id: 1
                      code: 0
                      reason: OK
                    - id: 2
                      code: 0
                      reason: OK
          headers: {}
      security: []
  http://host:port/get_sms_tasks:
    get:
      summary: 查询发送任务
      deprecated: false
      description: |-

         获取设备当前排队等待发送的发送任务详情
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: number
                  description: 发送端口号，从1开始计数
                  minimum: 1
                  maximum: max-port
                index:
                  type: number
                  description: 请求的开始位置，0表示从第一个任务开始
                num:
                  type: number
                  description: 请求任务数
                  default: 10
                need_content:
                  type: bool
                  default: false
                  description: 是否显示短信任务的内容
              required:
                - port
                - index
            example: 
              port: 1
              index: 0
              num: 10
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - id
                    - from
                    - recipients
                    - status
                    - charset
                    - coding
                  properties:
                    id:
                      type: number
                      description: 任务ID
                    from:
                      type: string
                      description: 发送端口号数组，数组项为从1开始计数的端口号
                    recipients:
                      type: array
                      description: 目标号码字符串数组
                      items:
                        type: string
                    status:
                      type: number
                      enum: 
                        - 0
                        - 1
                      description: >-
                        任务状态
                         - 0: 正常
                         - 1: 被暂停
                    charset:
                      type: string
                      enum: 
                        - utf8
                        - base64
                      description: 字符编码集
                    coding:
                      type: string
                      enum: 
                        - none
                        - usc2
                        - 7bit
                      description: 短信发送时的编码          
                    sms:
                      type: string
                      description: 短信内容
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    - id: 5
                      from: 3
                      recipients:
                        - 10086
                      status: 0
                      charset: utf8
                      coding: none
                      sms: 101
                    - id: 6
                      from: 3
                      recipients: 
                        - 10086
                      status: 0
                      charset: utf8
                      coding: none
                      sms: 102
          headers: {}
      security: []
  http://host:port/get_sms_config:
    get:
      summary: 获取短信上报配置
      deprecated: false
      description: |-

        获取短信报告上报配置
       
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                required:
                  - sms_status_url
                  - sms_status_max
                  - sms_status_period
                  - recv_sms_url
                  - recv_sms_max
                  - recv_sms_period
                properties:
                   sms_status_url:
                     type: string
                     default: "状态通知URL"
                     description: 短信发送状态报告推送目标服务器URL
                   sms_status_max:
                     type: number 
                     default: 100
                     description: >-
                       短信发送状态最大缓存数，当状态缓存数达到本值后，立刻发送缓存的报告到`sms_status_url`, 并重置定时器
                   sms_status_period:
                     type: number
                     default: 30
                     description: >-
                       短信发送状态报告周期，当本周期定时器超时时，⽴刻发送缓存的报告到 `sms_status_url`, 并重置定时器
                   recv_sms_url:
                     type: string
                     default: "状态通知URL"
                     description: 接收短信转发目标服务器URL
                   recv_sms_max:
                     type: number
                     default: 1
                     description: >-
                       接收短信最大缓存数，当短信缓存数达到本值后，立刻发送缓存的短信到 `recv_sms_url`, 并重置定时器
                   recv_sms_period:
                     type: number
                     default: 30
                     description: >-
                       接收短信转发周期，当本周期定时器超时时，立刻发送缓存的短信到 `recv_sms_url`, 并重置定时器
              examples:
                '1':
                  summary: Successful instance
                  value:
                    sms_status_url: 192.168.1.172
                    sms_status_max: 100
                    sms_status_period: 30
                    recv_sms_url: 192.168.1.176
                    recv_sms_max: 1
                    recv_sms_period: 30
          headers: {}
      security: []
  http://host:port/set_sms_config:
    post:
      summary: 设置短信上报配置
      deprecated: false
      description: |-

        设置短信报告上报配置
       
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - sms_status_url
                  - sms_status_max
                  - sms_status_period
                  - recv_sms_url
                  - recv_sms_max
                  - recv_sms_period
                properties:
                   sms_status_url:
                     type: string
                     default: "状态通知 URL"
                     description: 短信发送状态报告推送目标服务器URL
                   sms_status_max:
                     type: number 
                     default: 100
                     description: >-
                       短信发送状态最⼤缓存数，当状态缓存数达到本值后，⽴刻发送缓存的报告到 `sms_status_url`, 并重置定时器
                   sms_status_period:
                     type: number
                     default: 30
                     description: >-
                       短信发送状态报告周期，当本周期定时器超时时，⽴刻发送缓存的报告到 `sms_status_url`, 并重置定时器
                   recv_sms_url:
                     type: string
                     default: "状态通知URL"
                     description: 接收短信转发目标服务器URL
                   recv_sms_max:
                     type: number
                     default: 1
                     description: >-
                       接收短信最⼤缓存数，当短信缓存数达到本值后，⽴刻发送缓存的短信到 `recv_sms_url`, 并重置定时器
                   recv_sms_period:
                     type: number
                     default: 30
                     description: >-
                       接收短信转发周期，当本周期定时器超时时，⽴刻发送缓存的短信到 `recv_sms_url`, 并重置定时器
              examples:
                '1':
                  summary: Successful instance
                  value:
                    sms_status_url: 192.168.1.172
                    sms_status_max: 100
                    sms_status_period: 30
                    recv_sms_url: 192.168.1.176
                    recv_sms_max: 1
                    recv_sms_period: 30
          headers: {}
      security: []
  由服务器与设备配置决定:
    post:
      summary: 发送短信报告内容
      deprecated: false
      description: >-
        当短信任务成功、失败或超时时，系统将通过POST请求自动向服务器发送状态报告。
        
        
         若任务涉及群发，设备将持续上报状态更新，直至群组内所有短信处理完成。
         报告包含详细的成功与失败记录，附带时间戳及发送端口信息。


         注意事项：


         1. Tid与发送短信消息中的任务ID关联。


         2. Sent（已发送数量）和Failed（失败数量）为单任务内的累计数值。


         3. Sdr（成功发送明细记录）列表记录两次状态报告之间的成功详情，
         服务器需保留此前的明细数据。


         4. Fdr（失败明细记录）列表记录两次状态报告之间的失败详情，
         服务器需保留此前的明细数据。
      tags:
        - 短信彩信
      parameters:
        - name: version
          in: query
          description: |-
            API version.
            This document describes specification support only
          required: false
          schema:
            type: string
            default: 1.1
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: sms-sent-status
                    description: 报告类型
                  statuses:
                    type: array
                    description: 发送状态数组
                    items:
                      type: object
                      properties:
                        tid:
                          type: integer
                          description: 短信任务ID
                        sent:
                          type: integer
                          description: 发送成功短信数
                        failed:
                          type: integer
                          description: 发送失败短信数
                        unsent:
                          type: integer
                          description: 未发送短信数
                        sdr:
                          type: array
                          items:
                            type: object
                            properties: 
                              seq:
                                type: integer
                                description: 号码索引（基于群发号码）
                              port:
                                type: integer
                                description: 端口号
                              slot:
                                type: integer
                                description: 卡槽号
                              number:
                                type: string
                                description: SIM卡号码
                              ts:
                                type: integer
                                description: 发送时间戳
                              cost:    
                                type: integer
                                description: 发送耗时，**单位为毫秒**                         
                          description: |-
                            成功记录数组
                        fdr:
                          type: array
                          items:
                            type: object
                            properties: 
                              seq:
                                type: integer
                                description: 号码索引（基于群发号码）
                              port:
                                type: integer
                                description: 端口号
                              slot:
                                type: integer
                                description: 卡槽号
                              number:
                                type: string
                                description: SIM卡号码
                              ts:
                                type: integer
                                description: 失败时间戳
                              code:    
                                type: integer
                                description: 失败原因码   
                              gsm_cause: 
                                type: integer
                                description: 失败原因码，运营商相关
                          description: |-
                              失败记录数组
                      required:
                        - tid
                        - sent
                        - failed
                        - unsent
                        - sdr
                        - fdr
                required:
                  - type
                  - statuses
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    type: sms-sent-status
                    statuses:
                      - tid: 5
                        sent: 1
                        failed: 0
                        unsent: 0
                        sdr:
                          - seq: 1
                            port: 1
                            slot: 1
                            number: 10086
                            ts: 174594360
                            cost: 1290
                        fdr: []
                      - tid: 6
                        sent: 0
                        failed: 1
                        unsent: 1
                        sdr: [] 
                        fdr: 
                          - seq: 1
                            port: 3
                            slot: 1
                            number: 10086
                            ts: 1745996361
                            code: 7
                            gsm_cause: 350

          headers: {}
      security: []
  http://host:port/goip_get_esims.html:
    get:
      summary: 查询ESIM
      deprecated: false
      description: >-
        获取已提交eSIM操作的状态与详情。
        
        
        由于写入/删除操作属于异步流程，本接口提供任务进度更新，包括eSIM状态、卡槽占用情况及操作结果。
      tags:
        - ESIM
      parameters:
        - name: version
          in: query
          description: |-
            API version  
            <ul><li>1.0: 兼容以前的API</li>
            previous API
            <li>1.1: 支持本文档描述规范</li></ul>
          required: false
          schema:
            type: string
            default: '1.0'
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
        - name: ports
          in: query
          description: >-
            指定的端口号（从1开始取值）取值如下：
            
            <ul>
            <li>All: 所有端口</li>
            <li>指定单个端口</li>
            <li>由短编号分隔的数字，用于指定多个端口, <span style="font-weight: bold;color: red">"-"</span> indicates a continuous port number 
            
            
            <span style="font-weight: bold;color: red">例如："1-3,5"</span> 表示查询端口 1、2、3 和 5</li></ul>
          required: false
          schema:
            type: string
            default: all


      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 接口处理结果码
                  reason:
                    type: string
                    description: 接口处理结果原因
                  count:
                    type: integer
                    description: 统计结果数
                  ports:
                    type: array
                    items:
                      type: object
                      properties:
                        port:
                          type: integer
                          description: 端口号（从1开始取值）
                        eid:
                          type: string
                          description: eUICC ID
                        esim_state:
                          type: string
                          description: >-
                            是否正确获取到eid，取值：
                            <ul><li>0 否</li>
                            <li>1 是</li></ul>
                          enum:
                            - 0
                            - 1
                        profiles:
                          type: array
                          items:
                            type: object
                            properties:
                              slot:
                                type: integer
                                description: 卡槽号（从1开始取值）
                              enabled:
                                type: integer
                                description: >-
                                  当前profile是否使能，取值：
                                  <ul><li>0 否</li>
                                  <li>1 是</li></ul>
                                enum:
                                  - 0 
                                  - 1 
                              iccid:
                                type: string
                                description: ESIM 对应的ICCID
                              ac:
                                type: string
                                description: 激活码
                              cc:
                                type: string
                                description: 确认码
                              provider:
                                type: string
                                description: 服务供应商名称
                              exist:
                                type: integer
                                description: >-
                                  当前slot是否已写入profile：
                                  <ul><li>0 否</li>
                                  <li>1 是</li></ul>
                                enum:
                                  - 0
                                  - 1
                              op:
                                type: integer
                                description: >-
                                  当前slot的profile操作：
                                  
                                  <ul><li>0 没有操作</li>
                                  <li>1 正在写入</li>
                                  <li>2 正在删除</li></ul>
                                enum:
                                  - 0
                                  - 1
                                  - 2
                              status:
                                type: integer
                                description: >-
                                  当前esim profile操作状态，取值如下：
                                  <ul><li>0 没有操作</li>
                                  <li>1 操作请求已提交</li>
                                  <li>2 当前port正在进行profile操作</li>
                                  <li>3 操作出错，具体原因在reason字段描述</li></ul>
                                enum:
                                  - 0
                                  - 1
                                  - 2
                                  - 3
                              reason:
                                type: string
                                description: 操作错误原因
                            required:
                              - slot
                              - enabled
                              - iccid
                              - ac
                              - cc
                              - provider
                              - exist
                              - op
                              - reason
                              - 01JKF8VV7JBRWYHHFD7G54PRSV
                              - status
                            description: ESIM information array item description
                          description: >-
                            该端口的eSIM信息数组，其中每个eSIM信息包含以下字段：
                      required:
                        - port
                        - eid
                        - esim_state
                        - profiles
                      description: 查询结果项的说明
                    description: >-
                      查询结果数组，数组中每个结果项包含以下字段：
                required:
                  - code
                  - reason
                  - count
                  - ports
              examples:
                '1':
                  summary: Successful instance
                  value:
                    code: 200
                    reason: OK
                    count: 1
                    ports:
                      - port: 5
                        eid: 123abc456def789ghi
                        esim_state: 1
                        profiles: 
                          - slot: 1
                            enabled: 1
                            iccid: 898604701924xxxxxxxx
                            aa: ""
                            cc: ""
                            provider: China Mobile
                            exist: 1
                            op: 1
                            status: 1
                            reason: ""
          headers: {}
      security: []
  http://host:port/goip_write_esims.html:
    post:
      summary: 写入ESIM
      deprecated: false
      description: |-

        向指定端口和卡槽提交写入eSIM信息的请求。该操作属于​​异步流程​​，需通过查询eSIM接口来监控任务进度。
      tags:
        - ESIM
      parameters:
        - name: version
          in: query
          description: >-
            API version
            <ul>
            <li>1.0: 兼容以前的API</li>
              <li>1.1: 支持本文档描述规范</li></ul>
          schema:
            type: string
            default: '1.0'
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              port: 1
              slot: 1
              ac: ""
              cc: ""
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 1
                  maximum: max-port
                  description: 端口号
                slot:
                  type: integer
                  minimum: 1
                  maximum: 8
                  description: 卡槽号
                ac:
                  type: string
                  description: 激活码
                cc:
                  type: string
                  description: 确认码
              required:
                - port
                - slot
                - ac
                - cc
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 接口处理结果码
                    examples:
                      - 200
                  reason:
                    type: string
                    description: 接口处理结果原因
                    examples:
                      - OK
                  ports:
                    type: array
                    items:
                      type: object
                      properties:
                        port:
                          type: integer
                          minimum: 1
                          maximum: max-port
                          description: 端口号
                        slot:
                          type: integer
                          minimum: 1
                          maximum: 8
                          description: 卡槽号
                        status:
                          type: integer
                          description: >-
                            当前esim profile提交写入操作状态，取值如下：
                             
                              - 1 写入请求已提交
                              - 2 当前port正在进行profile操作，提交失败
                              - 3 其他错误，提交失败
                      required:
                        - port
                        - slot
                        - status
                      description: 查询结果项说明
                    description: 查询结果数组
                required:
                  - code
                  - reason
                  - ports
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    code: 200
                    reason: OK
                    ports: 
                      - port: 1
                        slot: 1
                        status: 1
          headers: {}
      security: []
  http://host:port/goip_delete_esims.html:
    post:
      summary: 删除ESIM
      deprecated: false
      description: |-
        向指定端口和卡槽提交删除eSIM配置文件的请求。该操作属于​​ **异步操作**, 需通过查询eSIM接口监控任务执行进度。
        
      tags:
        - ESIM
      parameters:
        - name: version
          in: query
          description: >-
            API version
            
              - 1.0: 兼容以前的API
              - 1.1: 支持本文档描述规范
          required: false
          schema:
            type: string
            default: '1.0'
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              port: 1
              slot: 1
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 1
                  maximum: max-port
                  description: 端口号
                slot:
                  type: integer
                  minimum: 1
                  maximum: 8
                  description: 卡槽号
              required:
                - port
                - slot
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 接口处理结果码
                  reason:
                    type: string
                    description: 接口处理结果原因
                  ports:
                    type: array
                    description: 结果的数组
                    items:
                      type: object
                      properties:
                        port:
                          description: 端口号（从1开始取值）
                          minimum: 1
                          maximum: max-port
                          type: integer
                        slot:
                          type: integer
                          description: 卡槽号（从1开始取值）
                          minimum: 1
                          maximum: max-port
                        status:
                          type: integer
                          description: >-
                            当前esim profile提交删除操作状态，取值如下：  
                          
                             - 1 删除请求已提交
                             - 2 当前port正在进行profile操作，提交失败
                             - 3 其他错误，提交失败
                      required:
                        - port
                        - slot
                        - status
                required:
                  - code
                  - reason
                  - ports
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    code: 200
                    reason: OK
                    ports: 
                      - port: 1
                        slot: 1
                        stauts: 1
          headers: {}
      security: []
  http://host:port/get_status_report_server:
    get:
      summary: 获取状态报告服务器
      deprecated: false
      description: |-
        获取设备自动状态报告的相关配置信息，包括 **上报间隔、URL地址及启用状态​​**
        
      tags:
        - 状态通知
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  enable:
                    type: bool
                    description: 状态报告使能
                  period:
                    type: number
                    description: >-
                      状态报告周期，取值必须不⼩于60秒，当为0时，取消状态上报
                  url:
                    type: string
                    description: 状态报告推送⽬标服务器URL
                required:
                  - enable
                  - period
                  - url
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    enable: true
                    period: 60
                    url: 192.168.1.171 
          headers: {}
      security: []
  http://host:port/set_status_report_server:
    post:
      summary: 设置状态报告服务器
      deprecated: false
      description: |-
        设置设备自动状态报告的配置参数，包括上报间隔、URL地址及启用状态
      tags:
        - 状态通知
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              enbale: true
              url: 192.168.1.172
              period: 60
            schema:
              type: object
              properties:
                enable:
                  type: bool
                  default: false
                  description: 是否开启状态报告
                url:
                  type: string
                  default: ""
                  description: >-
                      状态报告推送⽬标服务器URL
                period: 
                  type: number
                  default: 60
                  description: 状态报告周期，取值必须不⼩于60秒，当为0时，取消状态上报
      responses:
        '200':
          description: 'OK'      
          headers: {}
      security: []
  向指定服务器发送状态通知:
    post:
      summary: 设备状态报告内容
      deprecated: false
      description: >-
        设备将在满足以下任一条件时，向状态报告服务器发送包含设备运行状态信息的HTTP POST请求：


        **1.设备端口状态发生变化时**


        **2.设定的上报周期到期时**

      tags:
        - 状态通知
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: dev-status
                    description: 报告类型
                  seq:
                    type: integer
                    description: 报告序列号
                  expires:
                    type: integer
                    default: 180
                    description: 周期
                  mac:
                    type: string
                    description: 设备MAC地址
                  ip:
                    type: string
                    description: 设备IP地址
                  max-ports:
                    type: integer
                    description: 最大端口数
                  max-slots:
                    type: string
                    default: 1
                    description: 最大卡槽数
                  status:
                    type: array
                    items:
                      type: object
                      required:
                        - port
                        - sim
                        - seq
                        - st
                        - imei
                        - active
                        - inserted
                        - slot_active
                        - led
                        - iccid
                        - imsi
                        - sn
                        - opr
                        - bal
                        - sig
                      properties:
                        port:
                          type: string
                          description: 端⼝卡槽字符串，格式为"p.s", 其中p为端⼝号，s为卡槽号，如1.01
                        sim:
                          type: string
                          description: 使⽤远程卡时的SIM卡名称
                        seq:
                          type: integer
                          description: 序列号
                        st:
                          type: string
                          description: >-
                            卡槽状态：
                                            
                              - 0 未插卡
                              - 1 有空闲卡
                              - 2 SIM卡注册中
                              - 3 注册成功
                              - 4 正在通话
                              - 5 余额不足
                              - 6 注册失败
                              - 7 SIM被锁定（程序行为）
                              - 8 SIM被运营商锁定
                              - 9 SIM读卡出错
                              - 11 检测到卡槽有卡
                              - 12 用户锁定
                              - 13 端口互打中
                              - 14 等待端口互打
                              - 15 接入移动网络
                              - 16 模块响应超时
                        imei:
                          type: string
                          description: IMEI
                        active:
                           type: integer
                           description: >-
                              是否为当前卡
                               - 1 是
                               - 0 否
                           enum:
                             - 0
                             - 1
                        inserted:
                          type: integer
                          description: >-
                              是否插卡
                               - 1  是
                               - 0  否
                          enum: 
                            - 0
                            - 1
                        slot_active:
                          type: interger
                          description: >-
                            是否启用卡槽
                             - 1  是
                             - 0  否
                          enum:
                            - 0 
                            - 1
                        led:
                          type: interger
                          description: >-
                            是否开启LED
                             - 1  是
                             - 0  否
                          enum:
                            - 0
                            - 1
                        iccid:
                          type: string
                          description: ICCID
                        imsi:
                          type: string
                          description: IMSI
                        sn:
                          type: string
                          description: SIM卡号码
                        opr:
                          type: string
                          description: >-
                            运营商信息字符串，格式为“id name”，其中id为运营商ID, name为运营商名称
                        bal:
                          type: number
                          description: 余额字符串，格式为"x.xx", 如“1.11”
                        sig:
                          type: integer
                          description: 信号值
                          minimum: 0
                          maximum: 31
                    description: 端⼝状态结构数组
                required:
                  - type
                  - mac
                  - ip
                  - status
                  - seq
                  - max-ports
              examples:
                '1':
                  summary: dev-status
                  value: 
                    type: dev-Status
                    seq: 1
                    expires: 180
                    mac: 00-30-f1-01-02-03
                    ip: 192.168.1.67
                    max-ports: 32
                    max-slots: 4
                    status: 
                      - port: 1A
                        sim: ""
                        seq: 1
                        st: 7
                        imei: 86739075242xxxx
                        active: 1
                        inserted: 1
                        slot_active: 1
                        led: 0
                        iccid: 893510123241310xxxxx
                        imsi: 2680111006xxxxx
                        sn: ""
                        opr: 46000 CHINA MOBILE
                        bal: 0.00
                        sig: 5
                      - ......
          headers: {}
      security: []
  向指定服务器发送端口状态通知:
    post:
      summary: 端口状态报告内容
      deprecated: false
      description: >-
        设备将在满足以下任一条件时，向状态报告服务器发送HTTP POST请求（该请求包含设备运行状态信息）：


        **1.设备某个端口状态发生变化时**


        **2.预设的上报周期到期时**

      tags:
        - 状态通知
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: port-status
                    description: 报告类型
                  port:
                    type: string
                    description: >-
                      描述当前工作端口及SIM卡槽状态。格式示例：1.01, 1.02......32.04
                  sim:
                    type: string
                    description: 使用远程卡时的SIM卡名称
                  seq:
                    type: integer
                    description: 序列号
                  st:
                    type: string
                    description: >-
                      卡槽状态
                                            
                       - 0 未插卡
                       - 1 有空闲卡
                       - 2 SIM卡注册中
                       - 3 注册成功
                       - 4 正在通话
                       - 5 余额不足
                       - 6 注册失败
                       - 7 SIM卡被锁定（程序行为）
                       - 8 SIM卡被运营商锁定
                       - 9 SIM读卡出错
                       - 11 检测到卡槽有卡
                       - 12 用户锁定
                       - 13 端口互打中
                       - 14 等待端口互打
                       - 15 接入移动网络
                       - 16 模块响应超时
                  bal:
                    type: number
                    description: SIM卡余额（单位：元）
                  opr:
                    type: string
                    description: >-
                      SIM卡运营商名称及ID（仅在参数st等于3或4时有效）
                    nullable: true
                  sn:
                    type: string
                    description: SIM卡号码
                  imei:
                    type: string
                    description: IMEI
                  active:
                    type: integer
                    description: >-
                      是否为当前卡
                       - 1  是
                       - 0  否
                    enum:
                      - 0
                      - 1
                  imsi:
                    type: string
                    description: IMSI
                  iccid:
                    type: string
                    description: ICCID
                  inserted:
                    type: integer
                    description: >-
                      是否插卡
                       - 1  是
                       - 0  否
                    enum:
                      - 0
                      - 1
                  slot_active:
                    type: integer
                    description: >-
                      是否启用卡槽
                       - 1  是
                       - 0  否
                    enum:
                      - 0
                      - 1
                  sig:
                    type: integer
                    description: 信号
                    minimum: 0
                    maximum: 31
                  led:
                    type: integer
                    description: >-
                      是否开启LED
                       - 1  是
                       - 0  否
                    enum:
                      - 0
                      - 1
                  network:
                    type: interger
                    description: >-
                      网络类型
                       - 2: 2G
                       - 3: 3G
                       - 4: 4G
                required:
                  - type
                  - port
                  - bal
                  - st
              examples:
                '1':
                  summary: port-status
                  value:
                    type: port-status
                    port: 2B
                    sim: ''
                    seq: 8
                    st: '3'
                    bal: 100
                    opr: 46001 CHINA UNICOM GSM
                    sn: ''
                    imei: '8986105994xxxxx'
                    active: 1
                    imsi: '4600149782xxxxx'
                    iccid: '898601162899100xxxxx'
                    inserted: 1
                    slot_active: 1
                    sig: 29
                    led: 1
                    network: 4
          headers: {}
      security: []
      
  http://host:port/get_sms_stats:
    get:
      summary: 查询短信统计
      deprecated: false
      description: >-
        客户端可通过HTTP GET请求主动查询设备的短信统计信息
        
        
        若请求中包含 `slots`字段, 则优先使用该字段; 若未提供 `slots` 但包含 `slots_pattern` 字段，则使用  `slots_pattern` ;都没有则报错
      tags:
        - 统计信息
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
          content:
            application/json:
              example:
                slots:
                  - port: 1
                    slot: 1
                type: 0
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组，数组项如下
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                      卡槽模式字符串:

                       - `all`: 所有端口

                       - `n`: 指定单个端口，例如 2表示端口2

                       - `x-y,z`: 指定多个端口，端口号用逗号分隔。连续端口可用连字符表示，例如 1-4,7表示端口1至4及端口7
                  type:
                    type: number
                    description: >-
                      统计类型:
                       - 0: 最近一小时
                       - 1: 最近两小时
                       - 2: 当天
                       - 3: 累计
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    port:
                      type: integer
                      description: 端口号
                      maximum: max-port
                      minimum: 1
                    slot:
                      type: integer
                      description: 卡槽号
                      maximum: max-slot
                      minimum: 1
                    received:
                      type: integer
                      description: 接收短信数
                    sent:
                      type: integer
                      description: 发送短信数
                    sent_ok:
                      type: integer
                      description: 发送成功的短信数
                    sent_failed:
                      type: integer
                      description: 发送失败的短信数
                    con_failed:
                      type: integer
                      description: 连续发送失败的短信数
                    unsent:
                      type: integer
                      description: 未发送短信数
                    sending:
                      type: integer
                      description: 正发送短信数
                  required:
                    - port
                    - slot
                    - received
                    - sent
                    - sent_ok
                    - sent_failed
                    - con_failed
                    - unsent
                    - sending
              examples:
                '1':
                  summary: Response
                  value: 
                     - port: 1
                       slot: 1
                       received: 5
                       sent: 1
                       sent_ok: 1
                       sent_failed: 0
                       con_failed: 0
                       unsent: 0
                       sending: 0
                     - port: 2
                       "...": ""
                     - "..."
          headers: {}
      security: []
  http://host:port/goip_get_call_stat.html:
    get:
      summary: 查询呼叫统计
      deprecated: false
      description: >-
        客户端可通过HTTP GET请求主动查询设备的通话统计信息
        
        
        若请求中包含 `slots` 字段,则优先使用该字段；若未提供 `slots` 但包含 `slots_pattern` 字段，则使用  `slots_pattern` ；若两者均未提供，则返回错误
      tags:
        - 统计信息
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
          content:
            application/json:
              example:
                slots:
                  - port: 1
                    slot: 1
                  - port: 2
                    slot: 1
                type: 0
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组，数组项如下
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                      卡槽模式字符串:

                       - `all`: 所有端口

                       - `n`: 指定单个端口，例如 2表示端口2

                       - `x-y,z`: 指定多个端口，端口号用逗号分隔。连续端口可用连字符表示，例如 1-4,7表示端口1至4及端口7
                  type:
                    type: number
                    description: >-
                      统计类型:
                       - 0: 最近一小时
                       - 1: 最近两小时
                       - 2: 当天
                       - 3: 累计
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                        - port
                        - slot
                        - calls
                        - alerted
                        - connected
                        - con_failed
                        - nc
                        - pdd
                        - acd
                        - asr
                        - tcd
                        - act_tcd
                  properties:
                    port:
                      type: integer
                      description: 端口号
                      minimum: 1
                      maximum: max-port
                    slot:
                      type: integer
                      description: 卡槽号
                      minimum: 1
                      maximum: max-slot
                    calls:
                      type: integer
                      description: 呼叫数
                    alerted:
                      type: integer
                      description: 振铃数
                    connected:
                      type: integer
                      description: 通话数
                    con_failed:
                      type: integer
                      description: 连续失败数
                    nc:
                      type: string
                      description: >-
                            No Carriers总数
                    pdd:
                      type: integer
                      description: PDD
                    acd:
                      type: integer
                      description: ACD
                      asr:
                        type: integer
                        description: ASR百分值
                    tcd:
                      type: integer
                      description: |-
                            累计呼叫时⻓, 单位为分钟
                    act_tcd:
                      type: integer
                      description: |-
                            实际累计呼叫时⻓, 单位为分钟
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - port: 1
                      slot: 1
                      calls: 1
                      alerted: 1
                      connected: 1
                      con_failed: 0
                      nc: 0/0
                      pdd: 0
                      acd: 32
                      asr: 100
                      tcd: 1
                      act_tcd: 32
                    - port: 2
                      slot: 1
                      calls: 0
                      alerted: 0
                      connected: 0
                      con_failed: 0
                      nc: 0/0
                      pdd: 0
                      acd: 0
                      asr: 0
                      tcd: 0
                      act_tcd: 0
          headers: {}
      security: []
  http://host:port/get_received_smses:
    get:
      summary: 查询接收短信
      deprecated: false
      description: >-
        查询流程: 


        <ul><li>1. 首次查询时，不带查询参数（用户已验证参数除外），获取设备接收的所有短信。 </li>


        <li>2. 将设备返回的 next_id 值作为 sms_id 参数，查询后续短信。</li>


        <li>3. 若设备重启，将返回不同的同步信源标识（ssrc），此时需返回步骤1重新开始查询。</li>


        <li>4. 重复步骤2直至查询完成。</li></ul>
      tags:
        - 短信彩信
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Device  Password
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  default: 1
                  type: number
                  description: 开始短信ID, 1表⽰收件箱中第⼀条短信
                num: 
                  default: 0
                  type: number
                  description: 要读取短信数，不指定本字段表⽰读取所有短信
            example: 
              id: 1
              num: 0
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  ssrc:
                    type: string
                    description: >-
                      同步源标识。设备每次启动会产⽣⼀个新的ssrc，当ssrc变化时，表⽰设备重启, 需要重新调⽤本接⼝读取收件箱
                  next_id:
                    type: number
                    description: 下⼀条可读取短信ID
                  smses:
                    type: array
                    items:
                      type: object
                      required:
                        - port
                        - slot
                        - timestamp
                        - from
                        - to
                        - is_report
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                        timestamp:
                          type: string
                          description: 短信接收时间戳
                        from:
                          type: string
                          description: 本短信发送者
                        to:
                          type: string
                          description: 本短信接收者
                        is_report:
                          type: bool
                          description: 是否为短信送达报告
                        status:
                          type: number
                          description: is_report为true时，表⽰短信送达状态, 0表⽰成功送达
                        sms:
                          type: string
                          description: is_report为false时，普通短信内容，使⽤BASE64编码的UTF-8短信⽂本
                    description: 读取到的短信数组项
                required:
                  - ssrc
                  - next_id
                  - smses
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    ssrc: 2cc11d7f57ee0db6c0aa0b7483d02aa4
                    next_id: 3
                    smses:
                      - port: 1
                        slot: 1
                        timestamp: 1745915984
                        from: 8613800755500
                        to: ""
                        is_report: true
                        status: 0
                      - port: 1
                        slot: 1
                        timestamp: 1745915985
                        from: 10086
                        to: ""
                        is_report: false
                        sms: 5bCK5pWs55qE5a6i5oi377yM5oKo5b2T5YmN6K+d6LS55L2Z6aKdNDEuMDHlhYPvvIzlrp7ml7bor53otLkxMi4yMOWFg+OAguWunuaXtuafpeS9memineivt+eCueWHuyBodHRwczovL2R4LjEwMDg2LmNuL0EvdEpveEhRIOaIlueZu+W9leKAnOS4reWbveenu+WKqOKAnUFQUC3mnI3liqHlpKfljoUt5p+l6K+iLeS9memineafpeivouOAguW/g+e6p+acjeWKoe+8jOacn+W+heaCqOeahOKAnDEw5YiG4oCd5ruh5oSP44CC44CQ5Lit5Zu956e75Yqo44CR
          headers: {}
      security: []
  把接收到的彩信内容通过HTTP推送到配置的服务器地址上:
    post:
      summary: 接收彩信
      deprecated: false
      description: >-
                                  此阶段的主要功能是通过HTTP将接收到的彩信内容推送至已配置的服务器地址。在设备的`短信设置`菜单栏下的`彩信接收`页面可以配置推送接收服务器地址，如下图所示：
                                  
                                  彩信内容通过HTTP-POST方式推送，具体格式请参照HTTP标准规范。下文仅对特殊HTTP头字段进行说明（注：部分头字段可能不存在）
                                  
                                  
                                  此外，以'Emms-'开头的头字段为自定义字段，其余为标准HTTP字段
      tags:
        - 短信彩信
      parameters:
        - name: Date
          in: header
          description: 彩信发送时间
          required: false
          example: Thu,28 Mar 2024 09:47:10 GMT
          schema:
            type: string
        - name: Emms-Subject
          in: header
          description: >-
            彩信主题，使用BASE64编码
            
            
            `charset` : 字符集，如utf-8
          required: false
          example: MQ==;charset=US-ASCII
          schema:
            type: string

        - name: Emms-From
          in: header
          description: >-
            彩信发送地址，使用BASE64编码
            
            
            `charset` : 字符集，如utf-8
            
            
            `type` : 发件地址类型，一般是手机号码，即PLMN
          required: false
          example: KzE3Nzg1MzkzMjMw;type=PLMN;charset=utf-8
          schema:
            type: string
        - name: Emms-To
          in: header
          description: >-
            彩信接收地址，使用BASE64编码
            
            
            `charset` : 字符集，如utf-8
            
            
            `type` : 发件地址类型，一般是手机号码，即PLMN
          required: false
          example: KzE3Nzg1MzkzMzcv;type=PLMN;charset=utf-8
          schema:
            type: string
        - name: Emms-Mac
          in: header
          description: 接收彩信设备的MAC地址
          required: false
          example: 00-30-f1-01-02-03
          schema:
            type: string
        - name: Emms-Port
          in: header
          description: 接收彩信设备的端口卡槽编号
          required: false
          example: 2.01
          schema:
            type: string
        - name: Emms-Iccid
          in: header
          description: 接收彩信的SIM卡ICCID编号
          required: false
          example: 89302610108063017211
          schema:
            type: string
        - name: Emms-Imsi
          in: header
          description: 接收彩信的SIM卡IMSI编码
          required: false
          example: 302610947313558
          schema:
            type: string
        - name: Content-Type
          in: header
          description: >-
            具体配置需根据运营商要求确定，但需特别注意对multipart相关类型的处理。
            
            
            此部分与特定内容类型相关。
          required: false
          example: application/smil
          schema:
            type: string
      x-codeSamples:
        - lang: Java
          label: Java
          source: |
            import javax.servlet.http.HttpServletRequest;

            import java.io.*;
            import java.nio.charset.StandardCharsets;
            import java.util.*;

            public class MmsContentExtractor {
                
              /**
               * extract MMS Content
               * @param request
               * @param path
               */
                public static void extractMmsContent(HttpServletRequest request, String path) {
                    try {
                        if (!isMultipartRelated(request)) {
                            System.err.println("Error: Non multipart/related format");
                            return;
                        }
                        String boundary = extractBoundary(request.getContentType());
                        if (boundary == null) {
                            System.err.println("Error: Unable to parse boundary symbol");
                            return;
                        }

                        InputStream inputStream = request.getInputStream();
                        List<MmsPart> parts = parseMmsParts(inputStream, boundary);
                        /*for (MmsPart part : parts) {
                            savePartToFile(part, path);
                        }*/

                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }

                private static boolean isMultipartRelated(HttpServletRequest request) {
                    String contentType = request.getContentType();
                    return contentType != null && contentType.toLowerCase().startsWith("multipart/related");
                }

                private static String extractBoundary(String contentType) {
                    int boundaryIndex = contentType.indexOf("boundary=");
                    if (boundaryIndex == -1) return null;
                    String boundaryPart = contentType.substring(boundaryIndex + "boundary=".length());
                    int semicolonIndex = boundaryPart.indexOf(';');
                    boundaryPart = (semicolonIndex > 0) ? boundaryPart.substring(0, semicolonIndex) : boundaryPart;
                    return boundaryPart.trim().replaceAll("^\"|\"$", "");
                }
                
                /**
                 * Process the remaining content after detecting the end boundary
                 * @param bufferBytes :Current buffer byte array
                 * @param endIndex End :the starting position of the boundary in the buffer zone
                 * @param currentPart :The part currently being processed (may be null)
                 * @param parts :Parsed partial list
                 */
                private static void processRemainingContent(byte[] bufferBytes, int endIndex, MmsPart currentPart, List<MmsPart> parts) {
                    if (currentPart != null) {
                        // Extract the content before the end boundary (check for any preceding \r\n)
                        int contentEnd = endIndex;
                        
                        // If there is \r\n before ending the boundary, it needs to be excluded
                        if (contentEnd >= 2 && bufferBytes[contentEnd - 1] == '\n' && bufferBytes[contentEnd - 2] == '\r') {
                            contentEnd -= 2;
                        }
                        
                        byte[] partContent = Arrays.copyOfRange(bufferBytes, 0, contentEnd);
                        currentPart.setContent(partContent);
                        parts.add(currentPart);
                    }
                }
                
                private static List<MmsPart> parseMmsParts(InputStream inputStream, String boundary) throws IOException {
                    List<MmsPart> parts = new ArrayList<>();
                    byte[] boundaryBytes = ("\r\n--" + boundary).getBytes(StandardCharsets.UTF_8);
                    byte[] endBoundaryBytes = ("\r\n--" + boundary + "--").getBytes(StandardCharsets.UTF_8);
                    byte[] headerEndBytes = "\r\n\r\n".getBytes(StandardCharsets.UTF_8); //Header terminator, 4 bytes
                    
                    ByteArrayOutputStream buffer = new ByteArrayOutputStream();
                    MmsPart currentPart = null;
                    byte[] chunk = new byte[4096];
                    int bytesRead;

                    while ((bytesRead = inputStream.read(chunk)) != -1) {
                      buffer.write(chunk, 0, bytesRead);
                        byte[] bufferBytes = buffer.toByteArray();

                        //End of detection boundary (processing the last part)
                        int endIndex = indexOf(bufferBytes, endBoundaryBytes);
                        if (endIndex != -1) {
                            processRemainingContent(bufferBytes, endIndex, currentPart, parts); //Call an existing method to handle the end boundary
                            buffer.reset(); //Clear the buffer zone
                            break;
                        }

                        //Detecting ordinary boundaries (processing the middle part)
                        int boundaryIndex = indexOf(bufferBytes, boundaryBytes);
                        while (boundaryIndex != -1) {
                            if (currentPart != null) {
                              processRemainingContent(bufferBytes, boundaryIndex, currentPart, parts); //Call an existing method to handle the end boundary
                                currentPart = null;
                            }

                            // Skip the current boundary symbol and process the subsequent data (boundary symbol is \r\n -- boundary, totaling boundaryBytes.length bytes)
                            int nextStart = boundaryIndex + boundaryBytes.length;
                            bufferBytes = Arrays.copyOfRange(bufferBytes, nextStart, bufferBytes.length);
                            buffer.reset();
                            buffer.write(bufferBytes);

                            //Initialize new section, parse header (must find header terminator \r\n\r\n)
                            currentPart = new MmsPart();
                            int headerEnd = indexOf(bufferBytes, headerEndBytes);
                            if (headerEnd == -1) {
                                throw new IOException("The MIME header is incomplete and missing the terminator\r\n\r\n");
                            }
                            byte[] headerBytes = Arrays.copyOfRange(bufferBytes, 0, headerEnd);
                            parsePartHeaders(headerBytes, currentPart); 
                            // Skip the header terminator and start content from behind
                            int contentStart = headerEnd + headerEndBytes.length; 
                            bufferBytes = Arrays.copyOfRange(bufferBytes, contentStart, bufferBytes.length);
                            buffer.reset();
                            buffer.write(bufferBytes); // The buffer now only contains image content (without headers and borders)

                            boundaryIndex = indexOf(bufferBytes, boundaryBytes); // Continue searching for the next boundary symbol
                        }
                    }
                    return parts;
                }

                private static void parsePartHeaders(byte[] headerBytes, MmsPart part) {
                    String headersStr = new String(headerBytes, StandardCharsets.UTF_8);
                    for (String line : headersStr.split("\r\n")) {
                        if (line.contains(":")) {
                            String[] keyValue = line.split(":", 2);
                            part.getHeaders().put(keyValue[0].trim(), keyValue[1].trim());
                        }
                    }
                }

                private static int indexOf(byte[] source, byte[] target) {
                    if (target.length == 0) return 0;
                    int max = source.length - target.length;
                    for (int i = 0; i <= max; i++) {
                        if (source[i] != target[0]) continue; 
                        boolean match = true;
                        for (int j = 1; j < target.length; j++) {
                            if (source[i + j] != target[j]) {
                                match = false;
                                break;
                            }
                        }
                        if (match) return i;
                    }
                    return -1;
                }
                
                private static void savePartToFile(MmsPart part, String filePath) {
                  Map<String, String> headers = part.getHeaders();
                    String fileName = headers.get("Content-Location");
                    if (fileName == null) {
                        fileName = headers.get("Content-ID");
                    }
                    if (fileName == null) {
                        fileName = "extracted_image";
                    }
                    fileName = fileName.replaceAll("^<<|>>$", "");
                  if (headers.containsKey("Content-Type") && headers.get("Content-Type").startsWith("image/")) {
                      String savePath = filePath + fileName;
                      try (FileOutputStream fos = new FileOutputStream(savePath)) {
                          fos.write(part.getContent());
                          System.out.println("Successfully extracted image:" + savePath);
                      } catch (IOException e) {
                          System.err.println("Failed to save image: " + e.getMessage());
                          e.printStackTrace();
                      }
                  }
                }

                private static class MmsPart {
                    private final Map<String, String> headers = new HashMap<>();
                    private byte[] content;

                    public Map<String, String> getHeaders() {
                        return headers;
                    }

                    public void setContent(byte[] content) {
                        this.content = content;
                    }

                    public byte[] getContent() {
                        return content;
                    }
                }
            }
          headers: {}
      security: []
  http://host:port/send_ats:
    post:
      summary: 发送AT命令
      deprecated: false
      description: >-
        应用程序将向设备发送HTTP GET请求，设备将向应用程序返回HTTP 200 OK响应


         注意: 字符 #和 +需要分别替换为 %23和 %2B（浏览器会忽略原始字符的特殊含义）
                      
        
        本接口需等待系统命令响应超时时间结束后才会返回结果
        
        
        字段使用优先级：
        
        
        1.若请求包含`ports`字段，则使用该字段
        
        
        2.若未提供`ports`但存在`ports_pattern`字段，则使用`ports_pattern`
        
        
        3.若两者均未提供，则返回错误
      tags:
        - AT命令
      parameters:
        - name: username
          in: query
          description: '设备用户名 '
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                - ports_pattern: 1,2
                  at: ati
                - ports:
                    - 3
                    - 4
                  at: at+csq
              schema:
                type: array
                items:
                  type: object
                  required: 
                    - at
                  properties:    
                    ports:
                      type: array
                      description: >-
                        端口号数组，数组项为从1开始计数的端口号
                      items:
                        type: number
                    ports_pattern:
                      type: string
                      description: >- 
                        端口模式字符串，取值如下:

                         - `all` `*`: 所有端口
 
                         - `n`: 指定单个端口，如2，表示端口2

                         - `x-y,z` : 指定多个端口，端口号使用逗号分隔，如果有多个连续端口，可以用短横线表示，如1-4,7
                    at:
                      type: string
                      description: AT命令内容
                    timeout:
                      type: number
                      default: 120
                      description: AT命令响应超时时长，单位为秒

      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - port
                    - code
                    - resp
                  properties:
                    port:
                      type: number
                      description: 端口号
                    code: 
                      type: number
                      description: >-
                        结果码，取值为：
                        
                        - 0 : OK
                        
                        - 4 : Busy
                        
                        - 5 : Unavailable
                        
                        - 6 : Timeout
                        
                        - 15 : Invalid AT
                    resp: 
                      type: string
                      description: 设备系统恢复文本，code为0是回复内容为AT命令结果
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    - port: 1
                      code: 0
                      resp: ati\r\nQuectel_Ltd\r\nQuectel_M35\r\nRevision:M35FAR01A03\r\nOK\r\n
                    - port: 2
                      code: 0
                      resp: ati\r\nQuectel_Ltd\r\nQuectel_M35\r\nRevision:M35FAR01A03\r\nOK\r\n
          headers: {}
      security: []
  http://host:port/send_ussds:
    post:
      summary: 发送USSD命令
      deprecated: false
      description: >
        应用程序将向设备发送HTTP GET请求，设备将返回HTTP 200 OK响应给应用程序
        
        
        该API需等待一定时间以接收系统命令响应后才会返回结果
        
        
        字段使用优先级：
        
        
        1.若请求包含`ports`字段，则使用该字段
        
        
        2.若未提供`ports`但存在`ports_pattern`字段，则使用`ports_pattern`
        
        
        3.若两者均未提供，则返回错误
      tags:
        - USSD
      parameters:
        - name: username
          in: query
          description: '设备用户名 '
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                - ports_pattern: 1,2
                  ussd: 101*
                  timeout: 60
                - ports:
                    - 3
                    - 4
                  ussd: 102*
                  timeout: 60
              schema:
                type: array
                items:
                  type: object
                  required: 
                    - ussd
                  properties:    
                    ports:
                      type: array
                      description: >-
                        端口号数组，数组项为从1开始计数的端口号
                      items:
                        type: number
                    ports_pattern:
                      type: string
                      description: >- 
                        端口模式字符串，取值如下:

                         - `all` `*`: 所有端⼝
 
                         - `n`: 指定单个端⼝，如2，表⽰端⼝2

                         - `x-y,z` : 指定多个端⼝，端⼝号使⽤逗号分隔，如果有多个连续端⼝,可以⽤短横线表⽰, 如1-4,7
                    ussd:
                      type: string
                      description: USSD命令内容
                    timeout:
                      type: number
                      default: 120
                      description: USSD命令响应超时时长，单位为秒
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - port
                    - code
                    - resp
                  properties:
                    port:
                      type: number
                      description: Port number
                    code: 
                      type: number
                      description: >-
                        Reason Code
                        
                        - 0 : OK
                        
                        - 4 : Busy
                        
                        - 5 : Unavailable
                        
                        - 6 : Timeout
                    resp: 
                      type: string
                      description: System response content; when `code` is 0, it represents the reply result of the sent USSD command.
              examples:
                '1':
                  summary: Successful instance
                  value: 
                    - port: 1
                      code: 0
                      resp: your balance is 50.00$
                    - port: 2
                      code: 5
                      resp: unavailable
          headers: {}
      security: []
  
  http://host:port/set_network_type:
    post:
      summary: 设置网络类型
      deprecated: false
      description: >-
           该功能使设备能够锁定到特定的网络类型，例如​​LTE、WCDMA、GSM或自动模式​​。网络类型配置对于管理设备连接的无线电网络至关重要，尤其在启用小区锁定功能时更为重要
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              type: lte
            schema: 
              type: object
              properties:
                type:
                  type: string
                  description: |-
                     Network type.
                     <span style="color: red;font-weight: bold;font-style: italic">若要使用网络服务小区锁定功能，必须先将网络类型设置为‘LTE’</span>
                  enum:
                    - auto
                    - gsm
                    - wcdma
                    - lte
              required:
                - type
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/get_network_type:
    get:
      summary: 获取网络类型
      deprecated: false
      description: >-
          该功能允许用户获取设备端口当前的网络类型。它可以提供设备当前配置的网络类型信息，例如​​LTE、WCDMA、GSM或自动模式​​。此功能有助于网络设置的监控与故障排查
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: 网络类型
                    enum:
                      - auto
                      - gsm
                      - wcdma
                      - lte
                required:
                  - type
              examples:
                '1':
                  summary: Successful instance
                  value:
                    type: lte
          headers: {}
      security: []

  http://host:port/scan_serving_cells:
    post:
      summary: 扫描服务区基站
      deprecated: false
      description: >-
         该功能触发对设备服务小区的扫描。通过扫描可收集当前服务小区的网络参数信息，通常用于分析或优化设备与网络的连接状态
          
          
          若操作未成功完成或存在网络设置问题，系统可能需要在以下延迟后重试：
          
      
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - 1
            schema:
              type: array
              items:
                properties:
                  ports:
                    type: number
                    minimum: 1
                    maximum: max-port
                    description: 端口号数组
                required: 
                  - ports
      responses:
        '202':
          description: 'Accepted'
          headers: {}
      security: []
  http://host:port/get_serving_cells:
    get:
      summary: 获取服务区基站扫描结果
      deprecated: false
      description: >-
         该功能触发对设备服务小区的扫描。通过扫描可收集当前服务小区的网络参数信息，通常用于分析或优化设备与网络的连接状态
          
          
          若操作未成功完成或存在网络设置问题，系统可能需要在以下延迟后重试：
          
      
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - 1
            schema:
              type: array
              items:
                properties:
                  ports:
                    description: 端口号数组
                    type: number
                required: 
                  - ports
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    status:
                      type: string
                      description: >
                       最近一次扫描服务区基站操作的状态：
                       
                       
                       <ul><li>Idle: 无操作</li>
                       
                       
                       <li>Waitting: 正在处理</li>
                       
                       
                       <li>Completed: 已完成</li>
                       
                       
                       <li>Timeout: 超时</li></ul>
                      default: completed
                      enum: 
                        - idle
                        - waitting
                        - completed
                        - timeout
                    operator:
                      type: string
                      description: 运营商ID
                    earfcn:
                      type: number
                      description: ​​E-UTRA绝对无线频率信道号
                    pci:
                      type: number
                      description: 物理服务小区标识
                    cid:
                      type: string
                      description: ​​小区标识（Cell ID），十六进制字符串格式​
                    rsrp: 
                      type: number
                      description: 参考信号接收功率
              examples:
                  '1':
                    summary: Successful instance
                    value:
                      - port: 1
                        status: completed
                        operator: 46001
                        earfcn: 1650
                        pci: 114
                        cid: 6161001
                        rsrp: -86
              required:
                 - port
                 - status
                 - operator
                 - earfcn
                 - pci
                 - cid
                 - rsrp
          headers: {}
      security: []
  http://host:port/scan_neighbour_cells:
    post:
      summary: 扫描相邻基站
      deprecated: false
      description: >-
         该功能允许用户启动对设备周边邻区的扫描。扫描可配置为覆盖所有运营商的基站，或仅扫描与设备SIM卡对应运营商的基站
         
            发送扫描请求后，设备将开始扫描。若扫描未完成或遇到问题，可能需要在120秒后重试。此功能有助于检测并收集邻区信息，对网络优化和漫游管理等任务至关重要
         
         
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - port: 1
                range: current
              - port: 2
                range: all
            schema:
              type: array
              items:
                required:
                  - port
                  - range
                properties: 
                  port:
                      type: number
                      description: 端口号数组
                      minimum: 1
                      maximum: max-port
                  range:
                      type: string
                      description: >
                              扫描范围
                    
                    
                              <ul><li>All: 所有运营商</li>
                    
                    
                              <li>Current: SIM卡对应的运营商</li></ul>
                      enum: 
                        - all
                        - current
      responses:
        '202':
          description: 'Accepted'
          headers: {}
      security: []
  http://host:port/get_neighbour_cells:
    get:
      summary: 获取相邻基站扫描结果
      deprecated: false
      description: >-
         该功能允许用户获取由设备检测到的邻区信息。它可提供每个邻区的详细参数，包括：运营商​​，E-UTRA绝对无线频率信道号，物理小区标识​​（，小区全局标识​​，参考信号接收功率​​
          
          
          若操作未成功完成或存在网络设置问题，系统可能需在以下延迟后重试
      
      
          **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - 1
            schema:
              type: array
              items:
                properties:
                  ports:
                    type: number
                    description: 端口号数组
                    minimum: 1
                    maximum: max-port
                required: 
                  - ports
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    status:
                      type: string
                      description: >
                       最近一次扫描服务基站操作的状态：
                       
                       
                       <ul><li>Idle: 无操作</li>
                       
                       
                       <li>Waitting: 正在处理</li>
                       
                       
                       <li>Completed: 已完成</li>
                       
                       
                       <li>Timeout: 超时</li>
                      default: completed
                      enum: 
                        - idle
                        - waitting
                        - completed
                        - timeout
                    cells:
                      type: array
                      description: Cell结构数组
                      items:
                        type: object
                        properties:
                          operator: 
                            type: string
                            description: 运营商ID
                          earfcn:
                            type: number
                            description: E-UTRA绝对无线频率信道号
                          pci: 
                            type: number
                            description: 物理服务小区标识
                          cid:
                            type: string
                            description: 小区标识（Cell ID），十六进制字符串格式​
                          rsrp:
                            type: number
                            description: 参考信号接收功率
                  required:
                    - port
                    - status
                    - cells
              examples:
                  '1':
                    summary: Successful instance
                    value:
                      - port: 1
                        status: completed
                        cells:
                          operator: 46000
                          earfcn: 1850
                          pci: 227
                          cid: AC22D0E
                          rsrp: -67
          headers: {}
      security: []
  http://host:port/lock_cells:
    post:
      summary: 锁定基站
      deprecated: false
      description: >-
         该功能允许用户将设备锁定到指定小区。设备将通过​​E-UTRA绝对无线频率信道号（EARFCN）​​和​​物理小区标识（PCI）​​精准锁定目标小区。小区锁定功能可用于：优化网络性能，将设备限定在特定网络小区，确保连接稳定性
         
         
         若锁定操作未成功完成或存在网络设置问题，系统可能需要在以下延迟后重试：
         
         
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              port: 1
              earfcn: 1850
              pci: 227
            schema: 
              type: array
              items:
                properties:
                  port:
                    type: number
                    minimum: 1
                    maximum: max-port
                    description: 端口号
                  earfcn: 
                    type: number
                    description: ​​E-UTRA绝对无线频率信道号
                  pci:
                    type: number
                    description: 物理服务小区标识
                required: 
                  - port
                  - earfcn
                  - pci
      responses:
        '202':
          description: 'Accepted'
          headers: {}
        '503':
          description: >-
             服务功能不可用 <span style="color: red;font-weight: bold;font-style: italic">请先将网络类型设置为“LTE”以启用小区锁定功能</span>
          headers: {}
      security: []
  http://host:port/query_cells_locking_status:
    post:
      summary: 查询基站锁定状态
      deprecated: false
      description: >-
         该功能允许用户查询设备上的小区锁定状态。通过输入端口列表，系统可检测对应端口是否已施加小区锁定。响应将明确指示请求是否被接受，且支持进一步查询锁定操作的状态
         
         
         若操作未成功完成或存在网络设置问题，系统可能需要在以下延迟后重试：
         
      
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - 1
            schema:
              type:	array
              items:
                properties:
                  ports:
                    type: number
                    description: 端口号数组
                    minimum: 1
                    maximum: max-port
                required: 
                  - ports
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    status:
                      type: string
                      description: >
                       最近一次扫描服务区基站操作的状态：
                       
                       
                       <ul><li>Idle: 无操作</li>
                       
                       
                       <li>Waitting: 正在处理</li>
                       
                       
                       <li>Completed: 已完成</li>
                       
                       
                       <li>Timeout: 超时</li></ul>
                      default: completed
                      enum: 
                        - idle
                        - waitting
                        - completed
                        - timeout
                    action:
                      type: number
                      description: >-
                        服务区基站锁定操作类型：
                      
                      
                          - 0： 解除小区锁定
                        
                        
                          - 1： 通过EARFCN锁定小区（锁定指定频点下的最优小区）
                        
                        
                          - 2： 通过EARFCN+PCI精确锁定小区（锁定特定频点和物理标识的小区）
                    earfcn:
                      type: number
                      description: ​​E-UTRA绝对无线频率信道号
                    pci:
                      type: number
                      description: 物理服务小区标识
                    cid:
                      type: string
                      description: ​​小区标识（Cell ID），十六进制字符串格式​
                    action_status: 
                      type: number
                      description: >-
                       锁定操作状态：
                       
                       
                         - 0： 操作已完成
                         
                         
                         - 1： 操作未完成
              examples:
                  '1':
                    summary: Successful instance
                    value:
                      - port: 1
                        status: completed
                        action: 1
                        earfcn: 1650
                        pci: 114
                        cid: 6161001
                        action_status: 1
              
          headers: {}
      security: []
  http://host:port/unlock_cells:
    post:
      summary: 解锁基站
      deprecated: false
      description: >-
         该功能允许用户解除设备上先前锁定的小区。通过指定​​E-UTRA绝对无线频率信道号（EARFCN）​​和​​物理小区标识（PCI）​​，设备将释放对指定小区的锁定，恢复自动选择可用小区的功能
         
         
         若解锁操作未成功完成或存在网络设置问题，系统可能需要在以下延迟后重试：
                
      
         **重试间隔: 120 秒**
      tags:
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content: 
          application/json:
            example: 
              - port: 1
                earfcn: 1850
                pci: 227
            schema: 
              type: array
              items:
                properties:
                  port:
                    type: number
                    minimum: 1
                    maximum: max-port
                    description: 端口号
                  earfcn: 
                    type: number
                    description: ​​E-UTRA绝对无线频率信道号
                  pci:
                    type: number
                    description: 物理服务小区标识
                required: 
                  - port
                  - earfcn
                  - pci
      responses:
        '202':
          description: 'Accepted'
          headers: {}
      security: []
  http://host:port/set_cell_config:
    post:
      summary: 配置基站功能
      deprecated: false
      description: >-
         如果设置了**report_url**, 当请求的基站操作完成或超时，设备就会向**report_url**推送内容
      tags: 
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: 
                report_url:
                  type: string
                  description: 报告/结果推送 URL
                  example: 192.168.1.156
                timeout:
                  type: number
                  description: 基站操作超时时间，单位为秒。在`timeout`时间内还没有完成操作，如果设置了 `report_url`, 设备会推送`status`为`timeout`的结果
                  default: 120
                  example: 180
              
      responses:
        '200':
          description: '设备上报至 ​​**report_url**​​ 的数据内容如下:'
          content:
            application/json:
              schema:
                type: object
                properties:
                  serving_cells:
                    type: array
                    description: >-
                       服务区基站数组​​
                       
                       
                       如需详细信息，请参阅 **获取服务区基站扫描结果**
                    items: 
                     type: object
                     properties:
                       port:
                         type: number
                         description: 端口号
                       status:
                         type: string  
                         description: 最近一次扫描服务区基站操作的状态：
                       operator: 
                         type: string
                         description: 运营商ID
                       earfcn:
                         type: number
                         description: E-UTRA绝对无线频率信道号
                       pci:
                         type: number
                         description: 物理服务小区标识
                       cid:
                         type: string
                         description: 小区标识（Cell ID），十六进制字符串格式​
                       rsrp:
                         type: number
                         description: 参考信号接收功率
                  neighbour_cells:
                    type: array
                    description: >-
                       相邻基站服务区数组
                       
                       
                       如需详细信息，请参阅 **获取相邻基站扫描结果**
                    items: 
                     type: object
                     properties:
                       port:
                         type: number
                         description: 端口号
                       status:
                         type: string
                         description: 最近⼀次扫描服务基站操作的状态
                       cells:
                         type: array
                         description: Cell结构数组
                         items:
                           type: object
                           properties:
                             operator:
                               type: string
                               description: 运营商ID
                             earfcn:
                               type: number
                               description: E-UTRA绝对无线频率信道号
                             pci:
                               type: number
                               description: 物理服务小区标识
                             cid:
                               type: string
                               description: 小区标识（Cell ID），十六进制字符串格式​
                             rsrp:
                               type: number
                               description: 参考信号接收功率
                  locking_status:
                    type: array
                    description: >-
                       基站锁定状态数组
                       
                       
                       如需详细信息，请参阅 **查询基站锁定状态**
                    items: 
                     type: object
                     properties:
                       port:
                         type: number
                         description: 端口号
                       status:
                         type: number
                         description: 最近一次扫描服务基站操作的状态
                       action:
                         type: number
                         description: 服务区锁定操作类型​
                       earfcn:
                         type: number
                         description: E-UTRA绝对无线频率信道号
                       pci:
                         type: number
                         description: 物理服务小区标识
                       action_status:
                         type: number
                         description: ​​锁定操作状态​
                required:
                  - serving_cells
                  - neighbour_cells
                  - locking_status

              examples:
                '1': 
                  summary: Example
                  value:
                    serving_cells:
                      - port: 1
                        status: completed
                        operator: 46000
                        earfcn: 1300
                        pci: 300
                        cid: AC22D0B
                        rsrp: -86
                    neighbour_cells:
                      - port: 1
                        status: completed
                        cells:
                          - operator: 46000
                            earfcn: 3590
                            pci: 98
                            cid: AC22D0E
                            rsrp: -67
                    locking_cells:
                      - port: 1
                        status: completed
                        action: 0
                        earfcn: ""
                        pci: ""
                        action_status: 0
          headers: {}
      security: []
  http://host:port/get_cell_config:
    get:
      summary: 获取基站功能配置
      deprecated: false
      description: 
      tags: 
        - 锁定基站
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      
      responses:
        '202':
          description: 'Accepted'
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_url:
                    type: string
                    description: 报告/结果推送 URL
                  timeout:
                    type: number
                    description: >-
                      cell 操作超时时间，单位为秒
                      
                      
                      在`timeout`时间内还没有完成操作，如果设置了`report_url`, 设备会推送`status`为`timeout`的结果
                    default: 120
                required:
                  - report_url
                  - timeout
              examples:
                '1':
                  summary: Successful instance
                  value:
                    report_url: 192.168.1.156
                    timeout: 180
          headers: {}
      security: []  

  http://host:port/get_number_config:
    get:
      summary: 获取号码自动查询配置
      deprecated: false
      description: >-
         该功能允许用户获取设备的​​号码配置​​设置，可提供运营商配置的详细信息，包括：查询电话号码的方法，使用的指令集，电话号码的格式规范
      tags: 
        - 号码设置
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string                
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  config:
                    type: array
                    description: 号码配置查询结果数组
                    items:
                      type: object
                      properties:
                        operator_id: 
                          type: string
                          description: 运营商ID
                        operator_name:
                          type: string
                          description: 运营商名称
                        method: 
                          type: string
                          description: >-
                            获取号码方法
                          enum: 
                            - none
                            - ussd
                            - sms
                            - sim
                        command:
                          type: string
                          description: 获取号码命令，*使用BASE64编码**
                        keyword:
                          type: string
                          description: 匹配号码关键字，**使用BASE64编码**
                        valid_chars:
                          type: string
                          description: 有效字符集合，**使用BASE64编码**
                        dst_number:
                          type: string
                          description: 服务号码
                        recv_number:
                          type: string 
                          description: 接收号码
                        old_prefix: 
                          type: string
                          description: 待被替换前缀
                        new_prefix:
                          type: string
                          description: >-
                            待替换前缀，当获取的号码匹配`old_prefix`, ⽤`new_prefix`替换`old_prefix`
                      required:
                        - operator_id
                        - operator_name
                        - method
                        - command
                        - keyword
                        - valid_chars
                        - dst_number
                        - recv_number
                        - old_prefix
                        - new_prefix
                required:
                  - config
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - operator_id: 46011
                      operator_name: CHN-CT
                      method: none
                      command: ""
                      keyword: ""
                      valid_chars: ""
                      dst_number: ""
                      recv_number: ""
                      old_prefix: ""
                      new_prefix: ""
                    - operator_id: 46000
                      operator_name: CHINA MOBILE
                      method: sms
                      command: MTAx
                      keyword: 5bCK5pWs55qE
                      valid_chars: dXRmLTg=
                      dst_number: 10086
                      recv_number: ""
                      old_prefix: 861
                      new_prefix: 1
          headers: {}
      security: []
  http://host:port/set_number_config:
    post:
      summary: 设置号码自动查询配置
      deprecated: false
      description: >-
         该功能用于更新设备的​​号码配置​​设置。
         
         
         允许指定以下参数：查询电话号码的方法（如USSD、短信、SIM查询），使用的指令，关键词识别规则，其他与号码获取和处理相关的参数。配置内容可包括：运营商ID变更、查询方法切换、号码前缀替换规则。若请求中缺失某个参数，该字段将被更新为null值
      tags: 
        - 号码设置
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              - operator_id: 46011
                method: ussd
                command: "IzEwMQ=="
                keyword: "5Y+356CB"
                valid_chars: "dXRmLTg="
                dst_number: "MTAwMTE="
                recv_number: ""
                old_prefix: "ODY="
                new_prefix: "MQ=="
              - operator_id: 46000
                method: sms
                command: ""
                keyword: ""
                valid_chars: "dXRmLTg="
                dst_number: ""
                recv_number: ""
                old_prefix: ""
                new_prefix: ""
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: array
                  description: >-
                      号码配置参数规则：
                  
                  
                      务必先通过 ​​Get 号码配置​​ 接口获取当前配置，确认待修改的运营商ID存在且有效
                      
                      
                      若提交的请求中缺失数组内的某个参数（例如未包含 ussd_command 字段），该参数将被系统​​更新为null值
                  items:
                    type: object
                    required:
                      - operator_id
                      - method
                    properties:
                      operator_id: 
                        type: string
                        description: 运营商ID
                      method: 
                        type: string
                        enum: 
                          - none
                          - ussd
                          - sms
                          - sim
                        description: 获取号码方法
                      command: 
                        type: string
                        description: 获取号码命令，**使用BASE64编码**
                      keyword:
                        type: string
                        description: 匹配号码关键字，**使用BASE64编码**
                      valid_chars:
                        type: string
                        description: V有效字符集合，**使用BASE64编码**
                      dst_number:
                        type: string
                        description: 服务号码
                      recv_number:
                        type: string
                        description: 接收号码
                      old_prefix:
                        type: string
                        description: 待被替换前缀
                      new_prefix:
                        type: string
                        description: >-
                          待替换前缀，当获取的号码匹配`old_prefix`, ⽤`new_prefix`替换`old_prefix`
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/lock_sims:
    post:
      summary: 锁定SIM卡
      deprecated: false
      description: >-
         锁定指定端口的SIM卡
        
        
         当请求内容有 `slots` 字段时, 优先使用 `slots` 字段; 如果没有 `slots` 字段而有 `slots_pattern` 字段, 则使用 `slots_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                slots_pattern: 1-3
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                     卡槽模式字符串，支持格式大概如下:

                       - `all` `*`: 所有卡槽
 
                       - `*`: 所有卡槽
                       - `n.a`:  n端⼝a卡槽 
                       - `n-m`:  n端⼝到m端⼝范围内的所有端⼝中的所有卡槽
                       - `n.a-m.c`: n端⼝到m端⼝范围内的所有端⼝的a卡槽到c卡槽范围内的所有卡槽
                       - `n,m`: n端⼝和m端⼝的所有卡槽
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/unlock_sims:
    post:
      summary: 解锁SIM卡
      deprecated: false
      description: >-
        解锁指定端口的SIM卡
        
        
         当请求内容有 `slots` 字段时, 优先使用 `slots` 字段; 如果没有 `slots` 字段而有 `slots_pattern` 字段, 则使用 `slots_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                slots_pattern: 1-3
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                     卡槽模式字符串，支持格式大概如下:

                       - `all` `*`: 所有卡槽
 
                       - `*`: 所有卡槽
                       - `n.a`:  n端⼝a卡槽 
                       - `n-m`:  n端⼝到m端⼝范围内的所有端⼝中的所有卡槽
                       - `n.a-m.c`: n端⼝到m端⼝范围内的所有端⼝的a卡槽到c卡槽范围内的所有卡槽
                       - `n,m`: n端⼝和m端⼝的所有卡槽
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/switch_sims:
    post:
      summary: 切换SIM卡
      deprecated: false
      description: >-
        切换端口正在使用的当前卡槽

        
        
         当请求内容有 `slots` 字段时, 优先使用 `slots` 字段; 如果没有 `slots` 字段而有 `slots_pattern` 字段, 则使用 `slots_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                slots_pattern: 1.01-32.01
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                     卡槽模式字符串，支持格式大概如下:

                       - `all` `*`: 所有卡槽
 
                       - `*`: 所有卡槽
                       - `n.a`:  n端⼝a卡槽 
                       - `n-m`:  n端⼝到m端⼝范围内的所有端⼝中的所有卡槽
                       - `n.a-m.c`: n端⼝到m端⼝范围内的所有端⼝的a卡槽到c卡槽范围内的所有卡槽
                       - `n,m`: n端⼝和m端⼝的所有卡槽
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/reboot_modems:
    post:
      summary: 重启模块
      deprecated: false
      description: >-
        重启指定模块

        
        
         当请求内容有 `ports` 字段时, 优先使用 `	ports` 字段; 如果没有 `ports` 字段而有 `ports_pattern` 字段, 则使用 `ports_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                ports_pattern: 1,2
              schema:
                type: object
                properties:
                  ports:
                    type: array
                    description: >-
                      端口号数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                  ports_pattern:
                    type: string
                    description: >- 
                      端⼝模式字符串, 取值如下:

                       - `all` `*`: 所有端⼝
 
                       - `n`: 指定单个端⼝，如2，表⽰端⼝2

                       - `x-y,z` : 指定多个端⼝，端⼝号使⽤逗号分隔，如果有多个连续端⼝,可以⽤短横线表⽰, 如1-4,7
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/on_leds:
    post:
      summary: 点亮LED灯
      deprecated: false
      description: >-
        点亮设备指定SIM卡槽或端口上的LED指示灯

        
        当请求内容有 `ports` 字段时, 优先使用 `	ports` 字段; 如果没有 `ports` 字段而有 `ports_pattern` 字段, 则使用 `ports_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                slots_pattern: 1-5
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                     卡槽模式字符串，支持格式大概如下:

                       - `all` `*`: 所有卡槽
 
                       - `*`: 所有卡槽
                       - `n.a`:  n端⼝a卡槽 
                       - `n-m`:  n端⼝到m端⼝范围内的所有端⼝中的所有卡槽
                       - `n.a-m.c`: n端⼝到m端⼝范围内的所有端⼝的a卡槽到c卡槽范围内的所有卡槽
                       - `n,m`: n端⼝和m端⼝的所有卡槽
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/off_leds:
    post:
      summary: 关闭LED灯
      deprecated: false
      description: >-
        关闭设备指定SIM卡槽或端口上的LED指示灯

        
        当请求内容有 `ports` 字段时, 优先使用 `ports` 字段; 如果没有 `ports` 字段而有 `ports_pattern` 字段, 则使用 `ports_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                slots_pattern: 1-5
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    description: >-
                      端⼝卡槽数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                        slot:
                          type: number
                          description: 卡槽号
                  slots_pattern:
                    type: string
                    description: >- 
                     卡槽模式字符串，支持格式大概如下:

                       - `all` `*`: 所有卡槽
 
                       - `*`: 所有卡槽
                       - `n.a`:  n端⼝a卡槽 
                       - `n-m`:  n端⼝到m端⼝范围内的所有端⼝中的所有卡槽
                       - `n.a-m.c`: n端⼝到m端⼝范围内的所有端⼝的a卡槽到c卡槽范围内的所有卡槽
                       - `n,m`: n端⼝和m端⼝的所有卡槽
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/set_numbers:
    post:
      summary: 设置SIM号码
      deprecated: false
      description: >-
         为指定端口的SIM卡槽设置自定义号码
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                - port: 1
                  slot: 1
                  number: 13306633214
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                    - number
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    number: 
                      type: string
                      description: SIM号码                  
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/get_numbers:
    get:
      summary: 获取SIM号码
      deprecated: false
      description: >-
        获取该端口和卡槽的已配置号码
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string               
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                    - number
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    number: 
                      type: string
                      description: SIM号码   
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - port: 1
                      slot: 1
                      number: 100001
                    - port: 1
                      slot: 2
                      number: 100002
                    - ...: ...
          headers: {}
      security: []
  http://host:port/set_imeis:
    post:
      summary: 设置IMEI
      deprecated: false
      description: >-
         为指定端口和SIM卡槽设置自定义IMEI
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                - port: 1
                  slot: 1
                  imei: 000000000000
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                    - imei
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    imei: 
                      type: string
                      description: SIM IMEI                    
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/get_imeis:
    get:
      summary: 获取IMEI 
      deprecated: false
      description: >-
        获取端口卡槽号已设置的IMEI
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string               
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                    - imei
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    imei: 
                      type: string
                      description: SIM IMEI   
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - port: 1
                      slot: 1
                      imei: 000000000001
                    - port: 1
                      slot: 2
                      imei: 000000000002
                    - ...: ...
          headers: {}
      security: []
  http://host:port/set_pins:
    post:
      summary: 设置PIN
      deprecated: false
      description: >-
         为指定端口和SIM卡槽设置特定PIN码
         
         
         注：当指定新PIN码时，将覆盖现有PIN码。若将该值设置为空，则将清除当前PIN码
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                - port: 1
                  slot: 1
                  pin: 123456
                - port: 1
                  slot: 2
                  pin: ""
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    pin: 
                      type: string
                      description: SIM PIN
                      default: ""                   
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/get_pins:
    get:
      summary: 获取PIN
      deprecated: false
      description: >-
         获取该端口和卡槽的已配置PIN码
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string               
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                description:
                items:
                  type: object
                  required: 
                    - port
                    - slot
                    - imei
                  properties:
                    port:
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 端口号
                    slot: 
                      type: number
                      minimum: 1
                      maximum: max-port
                      description: 卡槽号
                    pin: 
                      type: string
                      description: SIM PIN   
              examples:
                '1':
                  summary: Successful instance
                  value:
                    - port: 1
                      slot: 1
                      pin: 123456
                    - port: 1
                      slot: 2
                      pin: ""
                    - ...: ...
          headers: {}
      security: []
  http://host:port/get_device_status:
    get:
      summary: 获取设备状态
      deprecated: false
      description: >-
         查询当前设备的详细状态信息
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: dev-status
                    description: 报告类型
                  seq:
                    type: integer
                    description: 报告序列号
                  expires:
                    type: integer
                    default: 180
                    description: 状态报告发送周期
                  mac:
                    type: string
                    description: 设备MAC地址
                  ip:
                    type: string
                    description: 设备IP地址
                  ver:
                    type: string
                    description: 设备版本
                  max-ports:
                    type: integer
                    description: 设备最大端口数
                  max-slot:
                    type: integer
                    description: 设备最大卡槽数
                  status:
                    type: array
                    items:
                      type: object
                      properties:
                        port:
                          type: string
                          description: 端口卡槽字符串，格式为“端口号.卡槽号”，如1.01
                        sim:
                          type: string
                          description: 使用远程卡时的SIM卡名称
                        seq:
                          type: integer
                          description: 序列号
                        st:
                          type: integer
                          description: >-
                            卡槽状态：
                            
                            
                            <ul>
                            <li>0 : 未插卡</li>
                            <li>1 : 有空闲卡</li>
                            <li>2 : SIM卡注册中</li>
                            <li>3 : 注册成功</li>
                            <li>4 : 正在通话</li>
                            <li>5 : 余额不足</li>
                            <li>6 : 注册失败</li>
                            <li>7 : SIM被锁定（程序行为）</li>
                            <li>8 : SIM被运营商锁定</li>
                            <li>9 : SIM读卡出错</li>
                            <li>11 : 检测到卡槽有卡</li>
                            <li>12 : 用户锁定</li>
                            <li>13 : 端口互打中</li>
                            <li>14 : 等待端口互打</li>
                            <li>15 : 接入移动网络</li>
                            <li>16 : 模块响应超时</li></ul>
                        imei:
                          type: string
                          description: IMEI
                        active:
                          type: int
                          description: >-
                            是否为当前卡
                            
                            
                            <ul><li>1 : 是</li><li>0 : 否</li></ul> 
                        inserted: 
                          type: int
                          description: >-
                            是否插卡
                            
                            
                            <ul><li>1 : 是</li><li>0 : 否</li></ul>
                        slot_active: 
                          type: int
                          description: >-
                            是否启用卡槽
                            
                            
                            <ul><li>1 : 是</li><li>0 : 否</li></ul>
                        led: 
                          type: int
                          description: >-
                            是否开启LED
                            
                            
                            <ul><li>1 : 是</li><li>0 : 否</li></ul> 
                        iccid:
                          type: string
                          description: ICCID
                        imsi: 
                          type: string
                          description: IMSI
                        sn: 
                          type: string
                          description: SIM卡号码
                        opr:
                          type: string
                          description: 运营商信息字符串，格式为“id name”，其中id为运营商ID, name为运营商名称
                        bal:
                          type: float
                          description: 余额字符串，格式为"x.xx", 如“1.11”
                        sig:
                          type: int
                          description: 信号值
                        
                      required:
                        - port
                        - sim
                        - seq
                        - st
                        - imei
                        - active
                        - inserted
                        - slot_active
                        - led
                    description: Status of device port
                required:
                  - type
                  - mac
                  - ip
                  - status
                  - seq
                  - max-ports
                  - ver
                  - expires
              examples:
                '1':
                  summary: dev-status
                  value: 
                    type: dev-Status
                    seq: 1
                    expires: 180
                    mac: 00-30-f1-01-02-03
                    ip: 192.168.1.67
                    max-ports: 32
                    max-slots: 4
                    status: 
                      - port: 1.01
                        sim: ""
                        seq: 1
                        st: 7
                        imei: 86739075242xxxx
                        active: 1
                        inserted: 1
                        slot_active: 1
                        led: 0
                        iccid: 893510123241310xxxxx
                        imsi: 2680111006xxxxx
                        sn: ""
                        opr: 46000 CHINA MOBILE
                        bal: 0.00
                        sig: 5
          headers: {}
      security: []
  http://host:port/get_ports_status:
    get:
      summary: 获取端口状态
      deprecated: false
      description: >-
        查询当前端口的详细状态信息
        
        
        当请求内容有 `ports` 字段时, 优先使用 `ports` 字段; 如果没有 `ports` 字段而有 `ports_pattern` 字段, 则使用 `ports_pattern`; 都没有则报错
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
              example:
                ports_pattern: 1,2
              schema:
                type: object
                properties:
                  ports:
                    type: array
                    description: >-
                      端口号数组
                    items:
                      type: object
                      properties:
                        port:
                          type: number
                          description: 端口号
                  ports_pattern:
                    type: string
                    description: >- 
                      端⼝模式字符串, 取值如下:

                       - `all` `*`: 所有端⼝
 
                       - `n`: 指定单个端⼝，如2，表⽰端⼝2

                       - `x-y,z` : 指定多个端⼝，端⼝号使⽤逗号分隔，如果有多个连续端⼝,可以⽤短横线表⽰, 如1-4,7
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    const: port-status
                    description: 报告类型
                  port:
                    type: string
                    description: >-
                      端⼝卡槽字符串，格式为"p.s", 其中p为端⼝号，s为卡槽号，如1.01,1.02.....32.04
                  sim:
                    type: string
                    description: 使用远程卡时的SIM卡名称
                  seq:
                    type: integer
                    description: 序列号
                  st:
                    type: string
                    description: >-
                      卡槽状态：
                                            
                       - 0 未插卡
                       - 1 有空闲卡
                       - 2 SIM卡注册中
                       - 3 注册成功
                       - 4 正在通话
                       - 5 余额不足
                       - 6 注册失败
                       - 7 SIM被锁定（程序行为）
                       - 8 SIM被运营商锁定
                       - 9 SIM读卡出错
                       - 11 检测到卡槽有卡
                       - 12 用户锁定
                       - 13 端口互打中
                       - 14 等待端口互打
                       - 15 接入移动网络
                       - 16 模块响应超时
                  bal:
                    type: number
                    description: 余额字符串，格式为"x.xx", 如“1.11”
                  opr:
                    type: string
                    description: >-
                      运营商信息字符串，格式为“id name”，其中id为运营商ID, name为运营商名称
                    nullable: true
                  sn:
                    type: string
                    description: SIM卡号码
                  imei:
                    type: string
                    description: IMEI
                  active:
                    type: integer
                    description: >-
                      是否为当前卡：
                       - - 是
                       - 0 否
                    enum:
                      - 0
                      - 1
                  imsi:
                    type: string
                    description: IMSI
                  iccid:
                    type: string
                    description: ICCID
                  inserted:
                    type: integer
                    description: >-
                      是否插卡：
                       - 1 是
                       - 0 否
                    enum:
                      - 0
                      - 1
                  slot_active:
                    type: integer
                    description: >-
                      是否启用卡槽：
                       - 1 是
                       - 0 否
                    enum:
                      - 0
                      - 1
                  sig:
                    type: integer
                    description: 信号值
                    minimum: 0
                    maximum: 31
                  led:
                    type: integer
                    description: >-
                      是否开启LED：
                       - 1 是
                       - 0 否
                    enum:
                      - 0
                      - 1
                required:
                  - type
                  - port
                  - bal
                  - st
              examples:
                '1':
                  summary: port-status
                  value:
                    - type: port-status
                      port: 1.01
                      sim: ''
                      seq: 8
                      st: '3'
                      bal: 100
                      opr: 46001 CHINA UNICOM GSM
                      sn: ''
                      imei: '8986105994xxxxx'
                      active: 1
                      imsi: '4600149782xxxxx'
                      iccid: '898601162899100xxxxx'
                      inserted: 1
                      slot_active: 1
                      sig: 29
                      led: 1
                    - port: 2.01
                      sim: ""
                      seq: 2
                      st: 3
                      imei: 89739216xxxxx
                      active: 1
                      inserted: 1
                      slot_active: 1
                      led: 0
                      iccid: 89103000000981xxxxx
                      imsi: 5250530906xxxxx
                      sn: ""
                      opr: 46000 CHINA MOBILE
                      bal: 0.00
                      sig: 21
          headers: {}
      security: []
  http://host:port/save_config:
    post:
      summary: 保存配置
      deprecated: false
      description: >-
        保存当前设备配置
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []
  http://host:port/reboot_device:
    post:
      summary: 重启设备
      deprecated: false
      description: >-
        立即重启设备
      tags: 
        - 设备操作
      parameters:
        - name: username
          in: query
          description: 设备用户名
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: 设备密码
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          headers: {}
      security: []